;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 12/26/2020
;Author  : zahra
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <delay.h>
;
;#define F_CPU 8000000UL  //CPU Frequency 8MHz
;#define RS 0             //RS=0
;#define EN 1             //EN=1
;
;void lcd_comm (char);
;void lcd_data(char);
;void lcd_init (void);
;
;
;void main(void)
; 0000 0026 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0027 
; 0000 0028 	lcd_init();    //Initialize LCD
;PCODE: $0000000E VOL: 0
; 0000 0029 
; 0000 002A 	lcd_data('H');  //adding the data
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 002B 	lcd_data('E');
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 002C 	lcd_data('L');
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 002D 	lcd_data('L');
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 002E 	lcd_data('O');
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 002F 
; 0000 0030 	lcd_comm(20);  //create space between the two words
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0031 
; 0000 0032 	lcd_data('W');
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0033 	lcd_data('O');
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0034 	lcd_data('R');
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0035 	lcd_data('L');
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0036 	lcd_data('D');
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0037     lcd_data('!');
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0038 
; 0000 0039 
; 0000 003A 	while(1)
;PCODE: $00000027 VOL: 0
; 0000 003B 	{
; 0000 003C 	;  //do nothing
; 0000 003D 	}
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 003E 
; 0000 003F }
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;
;void lcd_comm(char x){
; 0000 0041 void lcd_comm(char x){
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0042 
; 0000 0043 	PORTD = x;
;PCODE: $0000002F VOL: 0
;	x -> Y+0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0044 	PORTC &= ~(1<<RS);  //RS=0 command reg.
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0045 	PORTC |= 1<<EN;     //Enable Pulse
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0046 	delay_ms(20);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0047 	PORTC &= ~(1<<EN);  //Disable Pulse
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0048 
; 0000 0049 }
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;
;void lcd_data(char x){
; 0000 004B void lcd_data(char x){
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 004C 
; 0000 004D 	PORTD = x;
;PCODE: $00000040 VOL: 0
;	x -> Y+0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 004E 	PORTC |= 1<<RS;    //RS=1 Data reg.
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 004F 	PORTC |= 1<<EN;    //Enable Pulse
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0050 	delay_ms(20);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0051 	PORTC &= ~(1<<EN); //Disable Pulse
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0052 
; 0000 0053 }
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;
;void lcd_init(void){
; 0000 0055 void lcd_init(void){
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0056 
; 0000 0057 	DDRD = 0xFF;      //PORTD initialization
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0058 	DDRC = 0x03;      //PORTC initialization
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0059 
; 0000 005A 	lcd_comm(0x38);   //initialization of 16X2 LCD in 8bit mode
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 005B 	lcd_comm(0x06);   //auto Increment cursor
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 005C 	lcd_comm(0x0D);   //Display ON Cursor ON
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 005D 	lcd_comm(0x01);   //clear display
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 005E 	lcd_comm(0x80);   //cursor at home position
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 005F 
; 0000 0060 }
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
